1, 2,  3,  4
5, 6,  7,  8
9, 10, 11, 12
1, 2,  4,  8


vector<vector<int>> getMedianNum(vector<vector<int>& matrix, int k) {
	int n = matrix.size();
	vector<vector<int>> res(n - k + 1, vector<int>(n - k + 1, 0);
	unordered_set<pair<int, int>> visited;
	set<int> nums;
	nextSlidingWindow(matrix, k, 0, 0, visited, nums, res);
	
	return res;
}

void nextSlidingWindow(vector<vector<int>& matrix, int k, int x, int y, int dir, unordered_set<pair<int, int>>& visited, set<int>& nums, vector<vector<int>>& res) {
	if (x > n - k || y > n - k || visited.count({x, y}) != 0) {
		return;
	}
	if (nums.empty()) {
		for (int i = x; i < x + k; i++) {
			for (int j = y; j < y + k; j++) {
				nums.insert(matrix[x][y]);
			}
		}
	}
}
