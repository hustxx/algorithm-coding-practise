输入 像methodstack trace： “main, start”, “foo, start”, foo, end”, “bar, start”, “barend”, “main, end”, “main2, start”, “main2, end”
输出String, 例如以下格式，来表明method 被call的顺序和hierarchy
main
       foo
       bar
main2

struct func {
	string name;
	bool start;
	func(string s, bool st) {
		name = s;
		start = st;
	}
};

void funcTrace(vector<func> funcOps) {
	// stack: {name, spaceCount}
	//vector<pair<string, int>> stack;
	int space = 0;
	
	for (int i = 0; i < funcOps.size(); i++) {
		if (funcOps[i].start == true) {
			output(funcOps[i].name, space);
			//stack.push_back({funcOps[i].name, space});
			space++;
		} else {
			//stack.pop_back();
			space--;
		}
	}
	
	return;
}

